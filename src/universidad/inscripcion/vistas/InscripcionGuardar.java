/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidad.inscripcion.vistas;

import java.util.*;
import javax.swing.table.DefaultTableModel;
import universidad.entidades.*;
import universidad.modelo.*;

/**
 *
 * @author Hyouka
 */
public class InscripcionGuardar extends javax.swing.JInternalFrame {

    /**
     * Creates new form InscripcionGuardar
     */
    AlumnoData ad;
    InscripcionData id;
    private DefaultTableModel modelo=new DefaultTableModel();
    
    public InscripcionGuardar() {
        initComponents();
        this.setLocation(500, 0);
        Conexion c = new Conexion();
        ad=new AlumnoData(c);
        id =new InscripcionData(c);
        cargaAlumnos();
        armaCabeceraTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbAlumnos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jrbInscriptos = new javax.swing.JRadioButton();
        jrbDesinscriptos = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtabla = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jLabel1.setText("Alumnos");

        jrbInscriptos.setText("Inscriptos");
        jrbInscriptos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbInscriptosActionPerformed(evt);
            }
        });

        jrbDesinscriptos.setText("No inscriptos");
        jrbDesinscriptos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbDesinscriptosActionPerformed(evt);
            }
        });

        jtabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtabla);

        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setText("Anular Inscripcion");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jrbInscriptos)
                        .addGap(42, 42, 42)
                        .addComponent(jrbDesinscriptos))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jbInscribir)
                        .addGap(40, 40, 40)
                        .addComponent(jbAnular)
                        .addGap(35, 35, 35)
                        .addComponent(jbSalir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbInscriptos)
                    .addComponent(jrbDesinscriptos))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        // TODO add your handling code here:
        jrbInscriptos.setSelected(false);
        jrbDesinscriptos.setSelected(false);
        borraFilasTabla();
    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void jrbInscriptosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbInscriptosActionPerformed
        // TODO add your handling code here:
        jrbDesinscriptos.setSelected(false);
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
        if(jcbAlumnos.getSelectedItem()!=null){
        borraFilasTabla();
        cargaDatosInscriptas();
        }
    }//GEN-LAST:event_jrbInscriptosActionPerformed

    private void jrbDesinscriptosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbDesinscriptosActionPerformed
        // TODO add your handling code here:
        jrbInscriptos.setSelected(false);
        jbAnular.setEnabled(false);
        jbInscribir.setEnabled(true);
 //       if(jcbAlumnos.getSelectedItem()!=null){
        borraFilasTabla();
        cargaDatosNoInscriptas();
   //     }
    }//GEN-LAST:event_jrbDesinscriptosActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        int filaSeleccionada=jtabla.getSelectedRow();
    
        if(filaSeleccionada!=-1){
                
            Alumno a=(Alumno)jcbAlumnos.getSelectedItem();
            
            
            int idMateria=(Integer)modelo.getValueAt(filaSeleccionada,0);
            String nombreMateria=(String)modelo.getValueAt(filaSeleccionada,1);
            
            Materia m=new Materia(idMateria,nombreMateria);
            
            Inscripcion i=new Inscripcion(a,m,0);
            
            id.guardarInscripcion(i);
            
            borraFilasTabla();
            cargaDatosNoInscriptas();
            
          
        
        }
        
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada=jtabla.getSelectedRow();
        if(filaSeleccionada!=-1){
                    
            Alumno a=(Alumno)jcbAlumnos.getSelectedItem();
                        
            int idMateria=(Integer)modelo.getValueAt(filaSeleccionada,0);
            
            
            id.borrarCursadaDeUnaMateriaDeunAlumno(a.getIdAlumno(), idMateria);
            borraFilasTabla();
            cargaDatosInscriptas();
        }
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed
public void cargaAlumnos(){
    //Carga las materias al ComboBox
    List<Alumno> lista=ad.obtenerAlumnos();
    
     for(Alumno item:lista){
            jcbAlumnos.addItem(item);
    }

}
public void armaCabeceraTabla(){
           //Titulos de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Nombre");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        jtabla.setModel(modelo);
  }
public void borraFilasTabla(){

        int a =modelo.getRowCount()-1;

           for(int i=a;i>=0;i--){
   
                modelo.removeRow(i );
           }
}
public void cargaDatosInscriptas(){
    
        borraFilasTabla();
           //Llenar filas
           
        Alumno seleccionado=(Alumno)jcbAlumnos.getSelectedItem();
        
        List<Materia> lista = id.obtenerMateriasCursadas(seleccionado.getIdAlumno());
        
        for(Materia m:lista){
        
            modelo.addRow(new Object[]{m.getIdMateria(),m.getNombreMateria()});
        }
    }
public void cargaDatosNoInscriptas(){

        borraFilasTabla();
           //Llenar filas
           
        Alumno seleccionado=(Alumno)jcbAlumnos.getSelectedItem();
        
        List<Materia> lista = id.obtenerMateriasNOCursadas(seleccionado.getIdAlumno());
        
        for(Materia m:lista){
        
            modelo.addRow(new Object[]{m.getIdMateria(),m.getNombreMateria()});
        }

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JRadioButton jrbDesinscriptos;
    private javax.swing.JRadioButton jrbInscriptos;
    private javax.swing.JTable jtabla;
    // End of variables declaration//GEN-END:variables
}
