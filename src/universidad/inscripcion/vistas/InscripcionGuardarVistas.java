/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidad.inscripcion.vistas;


import java.util.*;
import javax.swing.JOptionPane;
import universidad.entidades.*;
import universidad.modelo.*;

/**
 *
 * @author Alumno
 */
public class InscripcionGuardarVistas extends javax.swing.JFrame {
    Conexion c =new Conexion();
    AlumnoData ad=new AlumnoData(c);//creo las conexiones
    MateriaData md=new MateriaData(c);
    InscripcionData id=new InscripcionData(c);
    /**
     * Creates new form InscripcionVistas
     */
    public InscripcionGuardarVistas() {
        initComponents();
        List<Alumno> al=new ArrayList<>();//en esta lista obtengo todos los alumnos
        al=ad.obtenerAlumnos();
        for(int x=0;x<al.size();x++){//cargo los item del combo box con el for
            Alumno a=al.get(x);
            String stri= String.valueOf(a.getIdAlumno())+"-"+a.getNombreAlumno();//le pongo un guion para separar y luego con el split guar el id
            CBAlumno.addItem(stri);
        }
        List<Materia> ml=new ArrayList<>();
        ml=md.obtenerMaterias();//cargo los combo box con items 
        for(int x=0;x<ml.size();x++){
            Materia a=ml.get(x);
            String stri= String.valueOf(a.getIdMateria())+"-"+a.getNombreMateria();
            CBMateria.addItem(stri);
        }
        List<Inscripcion>in=new ArrayList<>();
        in=id.obtenerInscripcion();//cargo los combo box con items 
        for(int x=0;x<in.size();x++){
            Inscripcion a=in.get(x);
            Alumno alu=ad.buscarAlumno(a.getAlumno().getIdAlumno());
            Materia mat=md.buscarMateria(a.getMateria().getIdMateria());
            String stri= String.valueOf(a.getIdInscripcion()+"-"+alu.getNombreAlumno()+" "+mat.getNombreMateria());
            CBInscripcion.addItem(stri);
        }
        CBAlumno.setVisible(false);
        CBMateria.setVisible(false);
        CBInscripcion.setVisible(false);
        borrar.setVisible(false);
        guardar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CBAlumno = new javax.swing.JComboBox<>();
        CBMateria = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TXTIdAlumno = new javax.swing.JTextField();
        TXTIdMateria = new javax.swing.JTextField();
        BGuardar = new javax.swing.JButton();
        BBorrar = new javax.swing.JButton();
        CBInscripcion = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        TXTIdInscripcion = new javax.swing.JTextField();
        BActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CBAlumno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alumno" }));
        CBAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBAlumnoActionPerformed(evt);
            }
        });

        CBMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Materia" }));
        CBMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMateriaActionPerformed(evt);
            }
        });

        jLabel1.setText("IdAlumno");

        jLabel2.setText("idMateria");

        TXTIdAlumno.setEditable(false);
        TXTIdAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTIdAlumnoActionPerformed(evt);
            }
        });

        TXTIdMateria.setEditable(false);

        BGuardar.setText("Inscribir");
        BGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BGuardarActionPerformed(evt);
            }
        });

        BBorrar.setText("Desinscribir");
        BBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBorrarActionPerformed(evt);
            }
        });

        CBInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBInscripcionActionPerformed(evt);
            }
        });

        jLabel3.setText("Elija una opcion: ");

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        jLabel4.setText("idInscripcion");

        TXTIdInscripcion.setEditable(false);

        BActualizar.setText("Refresh");
        BActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(borrar)
                        .addGap(30, 30, 30)
                        .addComponent(guardar)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXTIdAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTIdMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXTIdInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(186, 186, 186))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CBInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BBorrar)
                                .addGap(18, 18, 18)
                                .addComponent(BGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                .addComponent(BActualizar)
                                .addContainerGap())))))
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(CBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(CBMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BBorrar)
                    .addComponent(BGuardar)
                    .addComponent(jLabel3)
                    .addComponent(BActualizar))
                .addGap(27, 27, 27)
                .addComponent(CBInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TXTIdAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(TXTIdMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TXTIdInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrar)
                    .addComponent(guardar))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CBAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBAlumnoActionPerformed
        String arr[]=CBAlumno.getSelectedItem().toString().split("-");
        String id =arr[0];
        
        TXTIdAlumno.setText(id);
        
    }//GEN-LAST:event_CBAlumnoActionPerformed

    private void CBMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMateriaActionPerformed
        // TODO add your handling code here:
        String arr[]=CBMateria.getSelectedItem().toString().split("-");
        String id =arr[0];
        
        TXTIdMateria.setText(id);
    }//GEN-LAST:event_CBMateriaActionPerformed

    private void BGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BGuardarActionPerformed
       CBMateria.setVisible(true);
       CBAlumno.setVisible(true);
       guardar.setVisible(true);
        CBInscripcion.setVisible(false);
        borrar.setVisible(false);
        
     
     
    }//GEN-LAST:event_BGuardarActionPerformed

    private void BBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBorrarActionPerformed
        // TODO add your handling code here:
         CBInscripcion.setVisible(true);  
        CBAlumno.setVisible(false);
        CBMateria.setVisible(false);
        borrar.setVisible(true);
        guardar.setVisible(false);
        
    }//GEN-LAST:event_BBorrarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
     int idAlumno=Integer.parseInt(TXTIdAlumno.getText());
     int idMateria=Integer.parseInt(TXTIdMateria.getText());

     Alumno al=new Alumno();
     al=ad.buscarAlumno(idAlumno);
     Materia ma=new Materia();
     ma=md.buscarMateria(idMateria);
     Inscripcion i=new Inscripcion(al,ma);
     id.guardarInscripcion(i);
     JOptionPane.showMessageDialog(null,"Inscripcion Guardad correctamente");
    }//GEN-LAST:event_guardarActionPerformed

    private void CBInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBInscripcionActionPerformed
        // TODO add your handling code here:
        String arr[]=CBInscripcion.getSelectedItem().toString().split("-");
        String iii =arr[0];
        int x=Integer.parseInt(iii);
        
        Inscripcion i=id.buscarInscripcion(x);
        TXTIdInscripcion.setText(String.valueOf(x));
        TXTIdAlumno.setText(String.valueOf(i.getAlumno().getIdAlumno()));
        TXTIdMateria.setText(String.valueOf(i.getMateria().getIdMateria()));
        
    }//GEN-LAST:event_CBInscripcionActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        // TODO add your handling code here:
        id.borrarInscripcion(Integer.parseInt(TXTIdInscripcion.getText()));
        JOptionPane.showMessageDialog(null,"Inscripcion borrada correctamente");
    }//GEN-LAST:event_borrarActionPerformed

    private void TXTIdAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTIdAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTIdAlumnoActionPerformed

    private void BActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActualizarActionPerformed
        // TODO add your handling code here:
        
       /* CBAlumno.removeAllItems();
        CBMateria.removeAllItems();
        CBInscripcion.removeAllItems();
        */  List<Alumno> al=new ArrayList<>();//en esta lista obtengo todos los alumnos
        al=ad.obtenerAlumnos();
       /* for(int x=0;x<al.size();x++){//cargo los item del combo box con el for
            Alumno a=al.get(x);
            String stri= String.valueOf(a.getIdAlumno())+"-"+a.getNombreAlumno();//le pongo un guion para separar y luego con el split guar el id
            CBAlumno.addItem(stri);
        }
        List<Materia> ml=new ArrayList<>();
        ml=md.obtenerMaterias();//cargo los combo box con items 
        for(int x=0;x<ml.size();x++){
            Materia a=ml.get(x);
            String stri= String.valueOf(a.getIdMateria())+"-"+a.getNombreMateria();
            CBMateria.addItem(stri);
        }*/
        List<Inscripcion>in=new ArrayList<>();
        in=id.obtenerInscripcion();//cargo los combo box con items 
        for(int x=0;x<in.size();x++){
            Inscripcion a=in.get(x);
            Alumno alu=ad.buscarAlumno(a.getAlumno().getIdAlumno());
            Materia mat=md.buscarMateria(a.getMateria().getIdMateria());
            String stri= String.valueOf(a.getIdInscripcion()+"-"+alu.getNombreAlumno()+" "+mat.getNombreMateria());
            CBInscripcion.addItem(stri);
        }
    
    }//GEN-LAST:event_BActualizarActionPerformed
/*public boolean validar(String cadena) {
		if (cadena.matches("[0-9]*")) {
			return true;
		} else {
			return false;
		}
	}*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InscripcionGuardarVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InscripcionGuardarVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InscripcionGuardarVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InscripcionGuardarVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InscripcionGuardarVistas().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BActualizar;
    private javax.swing.JButton BBorrar;
    private javax.swing.JButton BGuardar;
    private javax.swing.JComboBox<String> CBAlumno;
    private javax.swing.JComboBox<String> CBInscripcion;
    private javax.swing.JComboBox<String> CBMateria;
    private javax.swing.JTextField TXTIdAlumno;
    private javax.swing.JTextField TXTIdInscripcion;
    private javax.swing.JTextField TXTIdMateria;
    private javax.swing.JButton borrar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
